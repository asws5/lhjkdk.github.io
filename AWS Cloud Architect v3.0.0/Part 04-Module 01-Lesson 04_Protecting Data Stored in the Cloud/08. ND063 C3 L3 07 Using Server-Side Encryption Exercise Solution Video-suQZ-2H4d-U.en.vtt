WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.030
In this exercise, you're tasked with writing data to

00:00:03.030 --> 00:00:05.850
an S3 bucket with server-side encryption enabled.

00:00:05.850 --> 00:00:09.030
You're also asked to verify that the object

00:00:09.030 --> 00:00:13.110
was encrypted with server-side encryption with the key of your choice.

00:00:13.110 --> 00:00:16.350
I'll go ahead and walk through how this can be done.

00:00:16.350 --> 00:00:17.970
In this walk-through, I'll use

00:00:17.970 --> 00:00:21.720
the same application server I used for the client side encryption demo.

00:00:21.720 --> 00:00:28.150
So I'll login to the application server and create a data file locally.

00:00:29.510 --> 00:00:31.845
We'll follow the same process.

00:00:31.845 --> 00:00:37.900
I'll use Systems Manager and Session Manager to login into the instance.

00:00:41.120 --> 00:00:44.300
So now that I've logged into my application server,

00:00:44.300 --> 00:00:46.295
I'm going to create a data file locally.

00:00:46.295 --> 00:00:49.710
I'll call this file my_data_s3_sse.txt.

00:00:52.160 --> 00:00:56.780
So I'm going to have some arbitrary data in this file.

00:00:56.780 --> 00:00:59.970
Just going to verify the contents of the file.

00:01:00.830 --> 00:01:05.300
I'm going to use the S3 CLI command to write the files

00:01:05.300 --> 00:01:09.440
to S3 and you're going to notice that I'm going to include flags,

00:01:09.440 --> 00:01:13.220
which will tell S3 to use server-side encryption with KMS,

00:01:13.220 --> 00:01:17.020
and I'm going to specify a KMS customer master key.

00:01:17.020 --> 00:01:19.970
I'm going to use the same KMS key that was used in

00:01:19.970 --> 00:01:22.150
the client-side encryption demo

00:01:22.150 --> 00:01:27.020
and this is going to be found in my environment variables file.

00:01:27.020 --> 00:01:28.460
Before I run the command,

00:01:28.460 --> 00:01:30.910
I'm going to set my environment variables.

00:01:30.910 --> 00:01:36.210
I'm going to run the command.

00:01:41.380 --> 00:01:45.140
As you can see, I've specified the environment variables for

00:01:45.140 --> 00:01:50.940
the S3 bucket and the KMS customer master key.

00:01:50.950 --> 00:01:53.630
Looks like I have a typo on my command.

00:01:53.630 --> 00:01:56.635
I'm just going to verify my environment variable.

00:01:56.635 --> 00:01:58.380
It looks like that's correct.

00:01:58.380 --> 00:02:01.560
So it looks like I have an extra slash here.

00:02:14.440 --> 00:02:20.145
That looks better. So this time, the upload worked.

00:02:20.145 --> 00:02:21.840
So now let's go into

00:02:21.840 --> 00:02:27.685
the S3 console and look at the encryption properties for the file that I just uploaded.

00:02:27.685 --> 00:02:30.330
So remember the file, my_data_ s3_sse.txt,

00:02:30.330 --> 00:02:33.539
I'm going to go into S3,

00:02:33.539 --> 00:02:37.155
and I'm going to go into the s3 bucket where we uploaded the file.

00:02:37.155 --> 00:02:38.920
This is the file that we uploaded.

00:02:38.920 --> 00:02:41.960
So I'm going to go into the details of that file,

00:02:41.960 --> 00:02:44.680
and if you look at the properties for this file,

00:02:44.680 --> 00:02:50.630
we can see that server-side encryption is set to use AWS-KMS.

00:02:50.630 --> 00:02:55.710
The KMS key ID is the key ID that I had chosen.

00:02:55.710 --> 00:02:59.750
With this in place, only AWS roles which have permissions to

00:02:59.750 --> 00:03:04.120
use this KMS key will be able to read the object from S3.

00:03:04.120 --> 00:03:10.900
Now, let's confirm that by revoking permissions for my instance role to use the KMS key.

00:03:10.900 --> 00:03:17.220
So I'm going to go back to the KMS console and I'm going to go into my key,

00:03:17.740 --> 00:03:22.310
and I'm going to remove my instance role from the key users.

00:03:22.310 --> 00:03:25.415
So these are the key users and here's my instance role.

00:03:25.415 --> 00:03:31.790
I'm going to remove it. So now this role no longer has permissions to use this key.

00:03:31.790 --> 00:03:40.070
Now let's go back to the instance and attempt to read the file from that S3 bucket again,

00:03:40.070 --> 00:03:45.450
and we're going to try to copy it back from S3 down to my local environment.

00:03:50.390 --> 00:03:53.520
I'm just going to put it in the local directory.

00:03:53.520 --> 00:03:59.555
It fails, and this is because the role no longer has permissions to use the key.

00:03:59.555 --> 00:04:02.570
The S3 service will only be able to decrypt

00:04:02.570 --> 00:04:06.880
the file if the caller has permissions to use the key.

00:04:06.880 --> 00:04:14.650
So let's add the role back into the list of authorized users and then we'll try it again.

00:04:14.650 --> 00:04:18.500
Then coming back to my KMS key management page,

00:04:18.500 --> 00:04:20.765
this is the key that I'm using.

00:04:20.765 --> 00:04:23.900
I'm going to add that role back.

00:04:23.900 --> 00:04:28.260
So this is the role that we were using for this instance.

00:04:28.610 --> 00:04:33.535
Let's add it back. So now this role has permissions to use the key.

00:04:33.535 --> 00:04:38.050
I'm going to come back to my Terminal and try the command again.

00:04:38.050 --> 00:04:45.240
This is the command to copy the file down, and this time, it worked.

00:04:45.240 --> 00:04:49.820
So using server-side encryption with KMS customer master keys is

00:04:49.820 --> 00:04:55.500
a great way to ensure that your data in the Cloud is protected and secure.

