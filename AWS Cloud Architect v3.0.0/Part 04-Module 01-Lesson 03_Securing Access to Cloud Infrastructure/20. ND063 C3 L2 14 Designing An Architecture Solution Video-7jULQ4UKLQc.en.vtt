WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.160
In this exercise, we started off with

00:00:02.160 --> 00:00:04.875
a basic cloud infrastructure architecture

00:00:04.875 --> 00:00:08.115
that did not have much in terms of security controls.

00:00:08.115 --> 00:00:09.705
If we look at the architecture,

00:00:09.705 --> 00:00:12.855
you should notice three distinct design decisions.

00:00:12.855 --> 00:00:15.990
First, the security groups that have been applied

00:00:15.990 --> 00:00:19.260
to all the resources allow all incoming traffic.

00:00:19.260 --> 00:00:23.265
They're not restricted to specific source networks or ports.

00:00:23.265 --> 00:00:26.400
Second, all requests that go to mailgun

00:00:26.400 --> 00:00:29.955
are going through a NAT gateway to get to the Internet.

00:00:29.955 --> 00:00:33.420
Third, our internal team members do not have

00:00:33.420 --> 00:00:36.700
connectivity to the Kubernetes cluster and database.

00:00:36.700 --> 00:00:40.730
Let's see how we can incorporate security into this design.

00:00:40.730 --> 00:00:44.465
Let's start off with modifying the security groups.

00:00:44.465 --> 00:00:47.570
The first security group for the load balancer doesn't

00:00:47.570 --> 00:00:50.360
need to be modified because for this type of web traffic,

00:00:50.360 --> 00:00:52.715
it's already specific enough.

00:00:52.715 --> 00:00:57.934
The second security group for the application server can be made more specific.

00:00:57.934 --> 00:01:00.590
We should set it up so that it only allows

00:01:00.590 --> 00:01:04.610
connections from the load balancer on port 443,

00:01:04.610 --> 00:01:09.770
and also from these VPN security group on port 8443.

00:01:09.770 --> 00:01:13.850
The database security groups should be updated to allow connections from

00:01:13.850 --> 00:01:18.785
the application and from the VPN security groups on the database port.

00:01:18.785 --> 00:01:21.965
We have also implemented the client VPN solution,

00:01:21.965 --> 00:01:26.900
which will allow authenticated users to connect to resources in the cloud environment.

00:01:26.900 --> 00:01:31.375
We can allow access to specific subnets based on the user's role.

00:01:31.375 --> 00:01:34.280
We can restrict developers in DevOps engineers

00:01:34.280 --> 00:01:37.430
to be able to access the application subnets.

00:01:37.430 --> 00:01:43.280
We can restrict members of the analytics team to be able to access the database subnets.

00:01:43.280 --> 00:01:46.640
Finally, we want to ensure that outbound traffic from

00:01:46.640 --> 00:01:50.540
the applications to the Internet is restricted and monitored.

00:01:50.540 --> 00:01:55.060
We can use a proxy server farm to accomplish this.

00:01:55.060 --> 00:01:59.060
In this case, our proxy servers could be configured to allow

00:01:59.060 --> 00:02:03.930
connections to mailgun.com and block all other connections.

