WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.075
Why do we need to secure our egress traffic?

00:00:03.075 --> 00:00:06.825
Picture an environment that requires PCI compliance.

00:00:06.825 --> 00:00:09.210
In order to meet the compliance requirements,

00:00:09.210 --> 00:00:12.540
outbound destinations must be explicitly defined.

00:00:12.540 --> 00:00:17.220
What about a scenario where an instance was compromised with a cryptojacking attack,

00:00:17.220 --> 00:00:19.980
where a cryptocurrency minor has been placed on

00:00:19.980 --> 00:00:23.890
the instance and is illicitly connecting to a ledger out there?

00:00:23.890 --> 00:00:27.020
It is important to have a method of restricting this type

00:00:27.020 --> 00:00:30.565
of traffic and also have some visibility into it.

00:00:30.565 --> 00:00:34.205
While this is not a capability of the NAT gateway device,

00:00:34.205 --> 00:00:36.815
there are a few solutions out there.

00:00:36.815 --> 00:00:39.110
Set up a Web proxy layer,

00:00:39.110 --> 00:00:42.970
this is the simplest way to log application Internet traffic.

00:00:42.970 --> 00:00:47.600
Proxies can also be used to restrict traffic to allowed sites.

00:00:47.600 --> 00:00:50.450
There are a few drawbacks with this approach.

00:00:50.450 --> 00:00:54.230
Applications and instances that require Internet access will

00:00:54.230 --> 00:00:58.225
need to be configured to make use of an HTTP proxy.

00:00:58.225 --> 00:01:03.895
The proxy firm itself will need to be configured, managed, and maintained.

00:01:03.895 --> 00:01:07.005
What about inline gateway appliances?

00:01:07.005 --> 00:01:11.050
These appliances generally come from commercial vendors and provide a range of

00:01:11.050 --> 00:01:15.545
capabilities for controlling and inspecting outbound traffic out-of-the-box.

00:01:15.545 --> 00:01:18.310
They're specifically designed for situations where

00:01:18.310 --> 00:01:22.015
companies need to meet security and compliance requirements.

00:01:22.015 --> 00:01:25.595
Cost is the biggest barrier to this approach.

00:01:25.595 --> 00:01:28.870
A host-based intrusion detection system is

00:01:28.870 --> 00:01:32.210
an agent-based solution that runs on each instance,

00:01:32.210 --> 00:01:36.759
providing many of the capabilities that an inline gateway appliance provides,

00:01:36.759 --> 00:01:39.775
including egress control and data loss prevention,

00:01:39.775 --> 00:01:42.245
and intrusion detection and prevention.

00:01:42.245 --> 00:01:45.820
There are commercial and open source solutions offered.

00:01:45.820 --> 00:01:50.825
The advantage is that your network design could remain simple and unchanged.

00:01:50.825 --> 00:01:54.290
The biggest disadvantage of this approach is enforcing

00:01:54.290 --> 00:01:57.740
all hosts in your environment to have the agent running.

00:01:57.740 --> 00:02:01.190
So to wrap it up, we have discussed the standard options for

00:02:01.190 --> 00:02:04.420
Internet connectivity in the AWS Cloud environment,

00:02:04.420 --> 00:02:07.214
highlighted concerns with security and compliance,

00:02:07.214 --> 00:02:10.010
and discussed some of the approaches and options to address

00:02:10.010 --> 00:02:14.100
these concerns when architecting your Cloud infrastructure.

