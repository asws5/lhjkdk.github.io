WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.610
In this exercise, you are tasked with testing

00:00:02.610 --> 00:00:06.525
network ACLs and security groups in your AWS environment.

00:00:06.525 --> 00:00:12.255
I will walk through how I have done this in my AWS account using the default VPC.

00:00:12.255 --> 00:00:14.850
So from my AWS Console,

00:00:14.850 --> 00:00:18.300
I'm going to go to the VPC management page.

00:00:18.300 --> 00:00:21.869
From here I'm going to take a look at my network ACLs.

00:00:21.869 --> 00:00:27.225
As you can see, I've created a new network ACL for this exercise.

00:00:27.225 --> 00:00:35.505
I'm going to associate this network ACL with the subnet that my instance is deployed in.

00:00:35.505 --> 00:00:39.735
It's going to be this subnet and again, 661.

00:00:39.735 --> 00:00:41.460
Now to start with,

00:00:41.460 --> 00:00:48.330
our network ACL denies all inbound and outbound traffic to all ports.

00:00:49.300 --> 00:00:51.725
These are the outbound rules,

00:00:51.725 --> 00:00:54.470
and these are the inbound rules, they're both denial.

00:00:54.470 --> 00:00:57.560
This is the default rule and you can't remove it.

00:00:57.560 --> 00:01:04.140
So now I'm going to go to my security groups, is right here.

00:01:04.140 --> 00:01:10.245
I've also created a security group for this exercise.

00:01:10.245 --> 00:01:16.120
As you can see, the security group also doesn't allow any inbound connections.

00:01:16.120 --> 00:01:19.740
It does allow all outbound connections.

00:01:19.740 --> 00:01:23.220
Now let's go to my EC2 instance.

00:01:23.220 --> 00:01:29.350
Let's take a look at the security groups that are assigned to my instance.

00:01:29.350 --> 00:01:32.750
There's the same security group we just looked at.

00:01:32.900 --> 00:01:36.285
Let's assign to this instance.

00:01:36.285 --> 00:01:40.790
As you can see, there are no inbound rules set up yet.

00:01:40.790 --> 00:01:43.570
So now I'm going to try to make a network connection to

00:01:43.570 --> 00:01:48.230
this instance using its public IP address.

00:01:48.230 --> 00:01:53.690
So I'm going to go to my SSH console here on my local machine.

00:01:53.690 --> 00:01:57.970
From here I'm going to try to make a network connection to the instance on port 22.

00:01:57.970 --> 00:02:00.250
I'm going to use the NC utility,

00:02:00.250 --> 00:02:05.615
which would be the same as using SSH or testing for SSH connectivity.

00:02:05.615 --> 00:02:09.095
I'm going to copy the IP address of the instance,

00:02:09.095 --> 00:02:12.660
public IP and port 22.

00:02:12.660 --> 00:02:14.865
So the connection failed.

00:02:14.865 --> 00:02:18.410
Now let's try to open up the ACL to allow traffic.

00:02:18.410 --> 00:02:24.250
Remember, I didn't have any network ACL rules that are actually allowing inbound traffic.

00:02:24.250 --> 00:02:31.150
So I'm going to go back to my network ACLs, the VPC console.

00:02:31.190 --> 00:02:33.230
From my network ACL,

00:02:33.230 --> 00:02:40.890
I'm going to go ahead and add an inbound rule that will allow all traffic to all ports.

00:02:41.540 --> 00:02:50.225
I'll also add an outbound rule to facilitate the network packet round-trip traffic.

00:02:50.225 --> 00:02:53.375
So that's the inbound rule allowing all.

00:02:53.375 --> 00:02:56.910
I'm going to add the same thing on the outbound side.

00:03:00.650 --> 00:03:02.720
All right, so let's go back to

00:03:02.720 --> 00:03:08.035
my terminal window and try the SSH connectivity test again.

00:03:08.035 --> 00:03:11.610
So the second time, as you can see,

00:03:11.610 --> 00:03:12.915
it still doesn't work.

00:03:12.915 --> 00:03:18.530
This is because the security group still doesn't allow any inbound traffic.

00:03:18.530 --> 00:03:22.300
So I need to add a security group rule to allow this traffic.

00:03:22.300 --> 00:03:25.925
So let's update the security group to allow this.

00:03:25.925 --> 00:03:28.820
So I'm going to go back to my security groups

00:03:28.820 --> 00:03:33.210
and find the security group that's assigned to the instance.

00:03:33.430 --> 00:03:44.130
I'm going to add a rule that will allow connections on port 22,

00:03:44.420 --> 00:03:46.580
and for this demonstration,

00:03:46.580 --> 00:03:51.870
I'm just going to allow access from my home IP address.

00:03:54.680 --> 00:03:58.035
Now let's try the SSH test again.

00:03:58.035 --> 00:04:01.055
Great. Now it works as you can see.

00:04:01.055 --> 00:04:04.130
So now let's try to update the network ACL

00:04:04.130 --> 00:04:07.580
and see what happens if we deny the outbound traffic.

00:04:07.580 --> 00:04:12.275
So I'm going into my network ACL and look at the outbound rules.

00:04:12.275 --> 00:04:16.830
I'm going to remove the rule that allows outbound traffic.

00:04:17.570 --> 00:04:20.520
Let's try our test again.

00:04:20.520 --> 00:04:24.530
So our attempt to reach the instance no longer works.

00:04:24.530 --> 00:04:28.310
This is because the network ACL outbound rule blocked

00:04:28.310 --> 00:04:32.425
the return packets from the SSH server back to my local host.

00:04:32.425 --> 00:04:37.340
This effectively disables the ability to establish a TCP handshake.

00:04:37.340 --> 00:04:42.515
I hope that running through this exercise helped you to have a better feel for how

00:04:42.515 --> 00:04:45.470
network ACLs and security groups can be used to control

00:04:45.470 --> 00:04:49.620
traffic to resources deployed in your Cloud environment.

