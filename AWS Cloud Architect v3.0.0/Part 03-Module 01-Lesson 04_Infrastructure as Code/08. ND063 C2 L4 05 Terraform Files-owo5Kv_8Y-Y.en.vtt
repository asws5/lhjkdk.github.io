WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.420
Terraform has its own configuration language,

00:00:03.420 --> 00:00:06.765
HashiCorp Configuration Language or HCL,

00:00:06.765 --> 00:00:10.500
that it uses primarily to declare resources.

00:00:10.500 --> 00:00:15.660
The language uses configuration files with a.tf extension.

00:00:15.660 --> 00:00:20.550
In this lesson, I'll be using HCL and terraform language interchangeably.

00:00:20.550 --> 00:00:25.380
HCL is declarative, meaning you use it to describe

00:00:25.380 --> 00:00:27.830
your desired infrastructure and terraform

00:00:27.830 --> 00:00:30.765
will figure out how to create what you requested in the code.

00:00:30.765 --> 00:00:34.050
So there's no need to worry about making sure all of your statements are

00:00:34.050 --> 00:00:38.200
perfectly in order or that all of your files or expertly organized.

00:00:38.200 --> 00:00:41.660
Well, it's great to organize your files in an orderly fashion to make

00:00:41.660 --> 00:00:45.125
it easier for your team to communicate and understand your infrastructure,

00:00:45.125 --> 00:00:46.970
Terraform doesn't need it.

00:00:46.970 --> 00:00:51.500
You use a text editor to write and edit Terraform code and

00:00:51.500 --> 00:00:54.470
most modern IDEs have Terraform or

00:00:54.470 --> 00:00:58.885
HashiCorp Configuration Language syntax highlighting plug-ins available.

00:00:58.885 --> 00:01:03.110
If you can't find the Terraform plug-in in your preferred IDE,

00:01:03.110 --> 00:01:06.550
search for HCL and see if you can find it that way.

00:01:06.550 --> 00:01:09.560
The set of files used to describe infrastructure in

00:01:09.560 --> 00:01:13.490
Terraform is referred to as a Terraform configuration.

00:01:13.490 --> 00:01:16.550
Believe it or not, a Terraform configuration for

00:01:16.550 --> 00:01:20.180
a global enterprise can be contained in one large file.

00:01:20.180 --> 00:01:24.605
Now that would be an example of a worst practice, but it can be done.

00:01:24.605 --> 00:01:29.210
Terraform would organize all that code and produce the desired results.

00:01:29.210 --> 00:01:33.050
It would be very hard to work that way and with this type of choice,

00:01:33.050 --> 00:01:36.215
that would just be a matter of time before a big mistake was made.

00:01:36.215 --> 00:01:41.420
Breaking up the Terraform configuration and organizing it into multiple files,

00:01:41.420 --> 00:01:43.760
describing elements like network, compute,

00:01:43.760 --> 00:01:46.955
and storage makes it easier to visualize,

00:01:46.955 --> 00:01:49.525
understand, and update the code.

00:01:49.525 --> 00:01:55.015
HCL syntax has a few elements that we need to understand for this lesson.

00:01:55.015 --> 00:01:58.575
Blocks, arguments, and expressions.

00:01:58.575 --> 00:02:02.540
Blocks are code containers for other content and usually

00:02:02.540 --> 00:02:06.505
represent the configuration of an object like a resource.

00:02:06.505 --> 00:02:10.085
Arguments assign values to a particular name,

00:02:10.085 --> 00:02:13.790
where the argument name assigns the argument value,

00:02:13.790 --> 00:02:19.320
and expressions are anything that returns a value like a string or a number.

