WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.690
Infrastructure as code or IAC,

00:00:03.690 --> 00:00:08.220
is also sometimes referred to as software-defined infrastructure.

00:00:08.220 --> 00:00:15.135
AWS uses two primary software services to define infrastructure in the Cloud.

00:00:15.135 --> 00:00:17.985
It's own IAC service called

00:00:17.985 --> 00:00:24.000
AWS CloudFormation and the widely available software tool called Terraform.

00:00:24.000 --> 00:00:27.050
Some people are curious about the differences between

00:00:27.050 --> 00:00:30.775
CloudFormation and AWS Elastic Beanstalk.

00:00:30.775 --> 00:00:36.440
Elastic Beanstalk is an AWS tool that provides a service for scaling and deploying

00:00:36.440 --> 00:00:39.050
your applications where you upload your code

00:00:39.050 --> 00:00:42.529
and Elastic Beanstalk handles all of the deployment tasks,

00:00:42.529 --> 00:00:46.430
from provisioning to load balancing and monitoring whereas

00:00:46.430 --> 00:00:49.310
CloudFormation is both a source and

00:00:49.310 --> 00:00:53.050
storage platform for your infrastructure configuration files.

00:00:53.050 --> 00:00:58.305
You can both write your code in CloudFormation and use it as a reference.

00:00:58.305 --> 00:01:02.210
The files are centralized, audited, and controlled,

00:01:02.210 --> 00:01:06.265
so you can be assured that all changes are being tracked and maintained.

00:01:06.265 --> 00:01:11.720
With CloudFormation, AWS is true to form by making it easy to use

00:01:11.720 --> 00:01:14.810
programming languages or even a text file to

00:01:14.810 --> 00:01:19.180
securely model and provision the resources you need to run your application.

00:01:19.180 --> 00:01:23.870
CloudFormation provides a definitive and auditable source

00:01:23.870 --> 00:01:28.555
of truth for your AWS and third party Cloud resources.

00:01:28.555 --> 00:01:34.400
Provisioning your application resources in a reproducible manner gives you

00:01:34.400 --> 00:01:38.315
flexibility and the security of knowing that your infrastructure

00:01:38.315 --> 00:01:42.880
is documented for restoration exactly as it was before.

00:01:42.880 --> 00:01:47.600
You have the opportunity to standardize your resources or only allows

00:01:47.600 --> 00:01:52.375
certain services and configurations to be provisioned via CloudFormation.

00:01:52.375 --> 00:01:56.330
This helps your organization with configuration uniformity,

00:01:56.330 --> 00:02:02.335
leading to faster troubleshooting and easily defined standard operating procedures.

00:02:02.335 --> 00:02:06.640
With AWS CloudFormation, you can store your code in

00:02:06.640 --> 00:02:11.225
AWS S3 or a version control system like GitHub.

00:02:11.225 --> 00:02:13.474
With a version control system,

00:02:13.474 --> 00:02:16.490
you can modify your code collaboratively and

00:02:16.490 --> 00:02:20.515
always have previous versions available for reference or an audit.

00:02:20.515 --> 00:02:23.150
One potential drawback of opting for

00:02:23.150 --> 00:02:29.850
AWS CloudFormation is that it effectively locks you onto AWS as a Cloud Provider,

00:02:29.850 --> 00:02:33.895
you would have to start over if you move somewhere else.

00:02:33.895 --> 00:02:39.440
For some, that wouldn't be a problem as they are completely committed to AWS as a vendor,

00:02:39.440 --> 00:02:44.260
but for hybrid Cloud customers or customers who don't want to be tied to one vendor,

00:02:44.260 --> 00:02:48.050
there's a widely-used Cloud neutral tool that has emerged as

00:02:48.050 --> 00:02:53.760
the market leader and we'll be taking a look at that software after the next exercise.

