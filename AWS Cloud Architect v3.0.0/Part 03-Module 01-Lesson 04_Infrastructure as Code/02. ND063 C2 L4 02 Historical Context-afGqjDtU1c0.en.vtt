WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.860
I'm going to take you back once again to the good old server room.

00:00:04.860 --> 00:00:08.505
Some of you may never have heard of such a thing,

00:00:08.505 --> 00:00:11.215
but bear with me while I explain.

00:00:11.215 --> 00:00:16.005
Long ago, most companies had dedicated space in their buildings,

00:00:16.005 --> 00:00:19.125
segregated from the rest of the business operations,

00:00:19.125 --> 00:00:21.645
and house behind a secure door.

00:00:21.645 --> 00:00:24.315
The space house the corporate servers,

00:00:24.315 --> 00:00:26.985
and the people who managed and maintained them.

00:00:26.985 --> 00:00:29.265
Servers were very expensive,

00:00:29.265 --> 00:00:31.710
taking months to build and ship.

00:00:31.710 --> 00:00:34.770
It was too loud to hold a regular conversation,

00:00:34.770 --> 00:00:37.080
and sometimes it was freezing cold.

00:00:37.080 --> 00:00:42.285
The servers had labels stuck to the front with their pet names and IP addresses.

00:00:42.285 --> 00:00:44.940
You might even see a logbook laying next to

00:00:44.940 --> 00:00:48.030
the servers or laying on top of one of the blades.

00:00:48.030 --> 00:00:52.879
It was notebook where technicians would make notes about the server data and metadata,

00:00:52.879 --> 00:00:57.385
the updates and maintenance that had been performed and when and by whom.

00:00:57.385 --> 00:01:00.530
Sometimes you see the name of the person in the company,

00:01:00.530 --> 00:01:02.630
you would need to contact if you are going to make

00:01:02.630 --> 00:01:05.630
changes or perform maintenance on the server.

00:01:05.630 --> 00:01:09.955
Sometimes you wouldn't see a log book or any documentation at all.

00:01:09.955 --> 00:01:12.465
Due to communication breakdowns,

00:01:12.465 --> 00:01:14.510
and a lack of inventory control,

00:01:14.510 --> 00:01:18.845
servers could run for years with unused or decommissioned software,

00:01:18.845 --> 00:01:22.300
having had no one login to them for ages.

00:01:22.300 --> 00:01:25.395
Now this wasn't anyone's fault in particular.

00:01:25.395 --> 00:01:28.340
Everything was fairly decentralized back then.

00:01:28.340 --> 00:01:32.120
There were no sophisticated dashboards or Slack teams.

00:01:32.120 --> 00:01:34.715
So something slipped through the cracks.

00:01:34.715 --> 00:01:36.710
Not a huge deal,

00:01:36.710 --> 00:01:41.995
but it made the decision to virtualize infrastructure several years later. A no-brainer.

00:01:41.995 --> 00:01:47.675
Moving applications to virtual server's meant more tech for engineers to master,

00:01:47.675 --> 00:01:50.045
but it also save time and money,

00:01:50.045 --> 00:01:52.615
lots and lots of time and money.

00:01:52.615 --> 00:01:57.844
Virtual servers were managed with dashboards and their health could be monitored,

00:01:57.844 --> 00:02:01.910
making server management easier for engineers.

00:02:01.910 --> 00:02:05.705
Years after virtualization took over the server room,

00:02:05.705 --> 00:02:10.459
companies began to further streamline finances and effort by outsourcing

00:02:10.459 --> 00:02:13.175
infrastructure hardware management to data centers

00:02:13.175 --> 00:02:17.365
often managed by third party operators or engineers.

00:02:17.365 --> 00:02:21.110
Only high level physical tasks like adding and

00:02:21.110 --> 00:02:25.490
upgrading hardware required visiting the off-site data center.

00:02:25.490 --> 00:02:28.430
Now in the cloud,

00:02:28.430 --> 00:02:32.465
we can provision and manage servers in a matter of seconds.

00:02:32.465 --> 00:02:34.820
But as you can imagine,

00:02:34.820 --> 00:02:38.540
the AWS account for a software company with millions of

00:02:38.540 --> 00:02:43.370
users and manually configured infrastructure is difficult to manage,

00:02:43.370 --> 00:02:45.920
especially with multiple teams working on

00:02:45.920 --> 00:02:50.000
many projects through many life cycles simultaneously.

00:02:50.000 --> 00:02:54.995
As you know, it is very easy to create infrastructure and

00:02:54.995 --> 00:03:00.070
often there is no centralized location to document its use and lifespan.

00:03:00.070 --> 00:03:02.450
So just like in the old server room,

00:03:02.450 --> 00:03:05.990
servers with no purpose can be left running for a while,

00:03:05.990 --> 00:03:09.770
until someone notices that it hasn't seen any activity and tracks

00:03:09.770 --> 00:03:13.925
down the owner to ask if it can be terminated and all the while,

00:03:13.925 --> 00:03:17.125
costs continue to mount for the unused compute.

00:03:17.125 --> 00:03:20.950
Until recently, Chances were very slim that

00:03:20.950 --> 00:03:25.525
AWS accounts were audited internally or by outsiders.

00:03:25.525 --> 00:03:29.405
So mistakes like this can go unnoticed for a long time.

00:03:29.405 --> 00:03:35.335
Unless every act of service was documented and that documentation was maintained,

00:03:35.335 --> 00:03:37.750
how could they be monitored and managed?

00:03:37.750 --> 00:03:41.210
Or rebuilt and reconfigured if necessary.

00:03:41.210 --> 00:03:44.670
Most of all, how did we end up back here?

00:03:44.670 --> 00:03:47.380
Wasting time and money on resources we can't

00:03:47.380 --> 00:03:51.710
trace and being unaware of what's happening in our infrastructure.

00:03:51.710 --> 00:03:57.880
The emergence of infrastructure as code has allowed Cloud Engineers to bring order and

00:03:57.880 --> 00:04:03.895
awareness to infrastructure through definition files that can be audited and versioned.

00:04:03.895 --> 00:04:10.415
In other words, the entirety of your Cloud infrastructure can be defined, created,

00:04:10.415 --> 00:04:15.500
changed and destroyed in a code and saved in files,

00:04:15.500 --> 00:04:18.360
reducing error and effort.

