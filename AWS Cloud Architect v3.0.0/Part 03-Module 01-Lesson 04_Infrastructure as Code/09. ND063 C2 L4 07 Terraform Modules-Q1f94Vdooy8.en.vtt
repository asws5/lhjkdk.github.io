WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.565
Most companies have at least three distinct environments for their applications.

00:00:05.565 --> 00:00:08.625
Something like a development environment,

00:00:08.625 --> 00:00:13.350
sometimes test or staging, and production.

00:00:13.350 --> 00:00:15.540
Of course, there can be more,

00:00:15.540 --> 00:00:17.310
but let's start there.

00:00:17.310 --> 00:00:20.925
In a perfect world with unlimited budgets,

00:00:20.925 --> 00:00:23.295
the environments would be identical.

00:00:23.295 --> 00:00:27.420
But in reality, they don't need to be deployed at the same scale.

00:00:27.420 --> 00:00:30.690
They just need to have the exact same configuration.

00:00:30.690 --> 00:00:34.380
How can you ensure that the configurations are the same?

00:00:34.380 --> 00:00:37.095
By using terraform modules.

00:00:37.095 --> 00:00:40.940
Terraform modules are at the most basic level,

00:00:40.940 --> 00:00:44.330
a set of terraform configuration files in a folder.

00:00:44.330 --> 00:00:48.845
The beauty of modules is that they can be reused in different environments,

00:00:48.845 --> 00:00:52.165
so that the code in the environments is exactly the same.

00:00:52.165 --> 00:00:57.740
This means that your terraform is not only reusable, but also maintainable,

00:00:57.740 --> 00:01:00.815
because any updates or changes made to a module

00:01:00.815 --> 00:01:04.360
will be reflected throughout the entire application life-cycle.

00:01:04.360 --> 00:01:07.340
Now that's amazing, and a way to ensure that

00:01:07.340 --> 00:01:10.220
your infrastructure changes are always in sync,

00:01:10.220 --> 00:01:15.355
when is essentially, made up almost entirely of reusable modules.

00:01:15.355 --> 00:01:19.580
Let's take a look at a typical module folder structure here,

00:01:19.580 --> 00:01:23.155
and see where we can reuse code throughout the life-cycle.

00:01:23.155 --> 00:01:27.865
Terraform uses input variables to modify modules,

00:01:27.865 --> 00:01:30.890
so they perform differently in different environments.

00:01:30.890 --> 00:01:35.795
For example, perhaps, all of your environments save data to S3,

00:01:35.795 --> 00:01:39.230
but of course, they don't all save them to the same S3 bucket,

00:01:39.230 --> 00:01:41.585
or right to the same database.

00:01:41.585 --> 00:01:46.610
To eliminate the potential name conflict of hard-coded resources,

00:01:46.610 --> 00:01:50.435
we would create a variable's file with the input variables,

00:01:50.435 --> 00:01:55.165
and define the variables in the main.tf, for each environment.

00:01:55.165 --> 00:01:57.665
You can look at the input variables,

00:01:57.665 --> 00:02:00.080
like the API of the module.

00:02:00.080 --> 00:02:03.925
It controls how things happen in different environments.

00:02:03.925 --> 00:02:09.620
One thing to keep in mind is that your environments are separate for a reason.

00:02:09.620 --> 00:02:12.310
The staging environment as a testing ground,

00:02:12.310 --> 00:02:15.055
so it's not always ready for prime time.

00:02:15.055 --> 00:02:19.295
This is critical when you're making changes and updates to shared modules.

00:02:19.295 --> 00:02:22.190
In order to make sure that your production environment isn't

00:02:22.190 --> 00:02:25.054
affected by changes to modules and staging,

00:02:25.054 --> 00:02:27.545
you create versioned modules.

00:02:27.545 --> 00:02:30.080
The best example I have seen of this,

00:02:30.080 --> 00:02:34.955
is to have separate Git repositories for reusable modules and live infrastructure,

00:02:34.955 --> 00:02:36.950
and specify a version module,

00:02:36.950 --> 00:02:39.154
Git URL in the source parameter,

00:02:39.154 --> 00:02:41.360
instead of your local file system.

00:02:41.360 --> 00:02:43.710
So when you run terraform on it,

00:02:43.710 --> 00:02:45.430
it uses GitHub as a source,

00:02:45.430 --> 00:02:47.795
and downloads the production version of the file,

00:02:47.795 --> 00:02:50.000
instead of the version that's being tested.

00:02:50.000 --> 00:02:55.135
A best practice is to build every configuration as a module.

00:02:55.135 --> 00:02:58.140
Modules are portable and shareable.

00:02:58.140 --> 00:03:02.285
Terraform has a public repo of modules you can,

00:03:02.285 --> 00:03:04.600
and should use as well.

00:03:04.600 --> 00:03:06.915
When you think about your infrastructure,

00:03:06.915 --> 00:03:08.390
in terms of modules,

00:03:08.390 --> 00:03:11.250
the possibilities are endless.

